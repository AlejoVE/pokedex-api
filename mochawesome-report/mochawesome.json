{
  "stats": {
    "suites": 8,
    "tests": 45,
    "passes": 0,
    "pending": 0,
    "failures": 45,
    "start": "2020-05-22T19:35:00.246Z",
    "end": "2020-05-22T19:35:00.283Z",
    "duration": 37,
    "testsRegistered": 45,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "14b432d5-2309-4a82-8f5f-0acff663401d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "57a769ca-68b4-4764-af53-6ae5e57d34eb",
          "title": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon: ",
          "fullFile": "/Users/master/evan-drive/0-teach-code/h-h-y-f/0--class-7-8/06-web-apps/01-exercises/wk-4-poke/pokedex-api-update/logic/evolutions-of/spec.js",
          "file": "/logic/evolutions-of/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Squirtle",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Squirtle",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Squirtle');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]\n    at Context.<anonymous> (logic/evolutions-of/spec.js:19:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "95b84b3b-6822-41fb-8b39-19ac4ace8f9b",
              "parentUUID": "57a769ca-68b4-4764-af53-6ae5e57d34eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, Wartortle",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Wartortle",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Wartortle');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]\n    at Context.<anonymous> (logic/evolutions-of/spec.js:29:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "68645cd5-08f6-43d6-b0ed-4a52161a44ee",
              "parentUUID": "57a769ca-68b4-4764-af53-6ae5e57d34eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, Blastoise",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Blastoise",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Blastoise');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   }\n- ]\n    at Context.<anonymous> (logic/evolutions-of/spec.js:39:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "a5a398b2-f324-4d62-9ea6-f82146f60fe4",
              "parentUUID": "57a769ca-68b4-4764-af53-6ae5e57d34eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, DoesNotExist",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 3, DoesNotExist",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample3, 'DoesNotExist');\nconst expected = null;\nassert.strictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/evolutions-of/spec.js:45:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "3fdc159e-aa50-4d43-ab4e-a9f2ed0535e0",
              "parentUUID": "57a769ca-68b4-4764-af53-6ae5e57d34eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Mew",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 5, Mew",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample5, 'Mew');\nconst expected = [\n  { \"name\": \"Mew\", \"num\": \"151\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Mew',\n-     num: '151'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Mew',\n-     num: '151'\n-   }\n- ]\n    at Context.<anonymous> (logic/evolutions-of/spec.js:53:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "4d69c37c-9e14-40b3-8208-da3281597572",
              "parentUUID": "57a769ca-68b4-4764-af53-6ae5e57d34eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "95b84b3b-6822-41fb-8b39-19ac4ace8f9b",
            "68645cd5-08f6-43d6-b0ed-4a52161a44ee",
            "a5a398b2-f324-4d62-9ea6-f82146f60fe4",
            "3fdc159e-aa50-4d43-ab4e-a9f2ed0535e0",
            "4d69c37c-9e14-40b3-8208-da3281597572"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d79da3a0-8ca9-42f6-83f0-f033e3d19e43",
          "title": "findById(pokeData, id) : returns the pokemon object with the given id",
          "fullFile": "/Users/master/evan-drive/0-teach-code/h-h-y-f/0--class-7-8/06-web-apps/01-exercises/wk-4-poke/pokedex-api-update/logic/find-by/id/spec.js",
          "file": "/logic/find-by/id/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, 13",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 1, 13",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample1, 13);\nconst expected = {\n  \"id\": 13,\n  \"num\": \"013\",\n  \"name\": \"Weedle\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/013.png\",\n  \"type\": [\n    \"Bug\",\n    \"Poison\"\n  ],\n  \"height\": \"0.30 m\",\n  \"weight\": \"3.2 kg\",\n  \"candy\": \"Weedle Candy\",\n  \"candy_count\": 12,\n  \"egg\": \"2 km\",\n  \"spawn_chance\": 7.12,\n  \"avg_spawns\": 712,\n  \"spawn_time\": \"02:21\",\n  \"multipliers\": [\n    1.01,\n    1.09\n  ],\n  \"weaknesses\": [\n    \"Fire\",\n    \"Flying\",\n    \"Psychic\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    { \"num\": \"014\", \"name\": \"Kakuna\" },\n    { \"num\": \"015\", \"name\": \"Beedrill\" }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 712,\n-   candy: 'Weedle Candy',\n-   candy_count: 12,\n-   egg: '2 km',\n-   height: '0.30 m',\n-   id: 13,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/013.png',\n-   multipliers: [\n-     1.01,\n-     1.09\n-   ],\n-   name: 'Weedle',\n-   next_evolution: [\n-     {\n-       name: 'Kakuna',\n-       num: '014'\n-     },\n-     {\n-       name: 'Beedrill',\n-       num: '015'\n-     }\n-   ],\n-   num: '013',\n-   spawn_chance: 7.12,\n-   spawn_time: '02:21',\n-   type: [\n-     'Bug',\n-     'Poison'\n-   ],\n-   weaknesses: [\n-     'Fire',\n-     'Flying',\n-     'Psychic',\n-     'Rock'\n-   ],\n-   weight: '3.2 kg'\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 712,\n-   candy: 'Weedle Candy',\n-   candy_count: 12,\n-   egg: '2 km',\n-   height: '0.30 m',\n-   id: 13,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/013.png',\n-   multipliers: [\n-     1.01,\n-     1.09\n-   ],\n-   name: 'Weedle',\n-   next_evolution: [\n-     {\n-       name: 'Kakuna',\n-       num: '014'\n-     },\n-     {\n-       name: 'Beedrill',\n-       num: '015'\n-     }\n-   ],\n-   num: '013',\n-   spawn_chance: 7.12,\n-   spawn_time: '02:21',\n-   type: [\n-     'Bug',\n-     'Poison'\n-   ],\n-   weaknesses: [\n-     'Fire',\n-     'Flying',\n-     'Psychic',\n-     'Rock'\n-   ],\n-   weight: '3.2 kg'\n- }\n    at Context.<anonymous> (logic/find-by/id/spec.js:45:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "763e7c60-eacf-4bac-af35-9472e7b68868",
              "parentUUID": "d79da3a0-8ca9-42f6-83f0-f033e3d19e43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, 16",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 1, 16",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample1, 16);\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/id/spec.js:51:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "a98c75f5-2101-48e2-8c02-66bd5d4da7e4",
              "parentUUID": "d79da3a0-8ca9-42f6-83f0-f033e3d19e43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, 46",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 2, 46",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample2, 46);\nconst expected = {\n  \"id\": 46,\n  \"num\": \"046\",\n  \"name\": \"Paras\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/046.png\",\n  \"type\": [\n    \"Bug\",\n    \"Grass\"\n  ],\n  \"height\": \"0.30 m\",\n  \"weight\": \"5.4 kg\",\n  \"candy\": \"Paras Candy\",\n  \"candy_count\": 50,\n  \"egg\": \"5 km\",\n  \"spawn_chance\": 2.36,\n  \"avg_spawns\": 236,\n  \"spawn_time\": \"01:42\",\n  \"multipliers\": [\n    2.02\n  ],\n  \"weaknesses\": [\n    \"Fire\",\n    \"Ice\",\n    \"Poison\",\n    \"Flying\",\n    \"Bug\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    {\n      \"num\": \"047\",\n      \"name\": \"Parasect\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 236,\n-   candy: 'Paras Candy',\n-   candy_count: 50,\n-   egg: '5 km',\n-   height: '0.30 m',\n-   id: 46,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/046.png',\n-   multipliers: [\n-     2.02\n-   ],\n-   name: 'Paras',\n-   next_evolution: [\n-     {\n-       name: 'Parasect',\n-       num: '047'\n-     }\n-   ],\n-   num: '046',\n-   spawn_chance: 2.36,\n-   spawn_time: '01:42',\n-   type: [\n-     'Bug',\n-     'Grass'\n-   ],\n-   weaknesses: [\n-     'Fire',\n-     'Ice',\n-     'Poison',\n-     'Flying',\n-     'Bug',\n-     'Rock'\n-   ],\n-   weight: '5.4 kg'\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 236,\n-   candy: 'Paras Candy',\n-   candy_count: 50,\n-   egg: '5 km',\n-   height: '0.30 m',\n-   id: 46,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/046.png',\n-   multipliers: [\n-     2.02\n-   ],\n-   name: 'Paras',\n-   next_evolution: [\n-     {\n-       name: 'Parasect',\n-       num: '047'\n-     }\n-   ],\n-   num: '046',\n-   spawn_chance: 2.36,\n-   spawn_time: '01:42',\n-   type: [\n-     'Bug',\n-     'Grass'\n-   ],\n-   weaknesses: [\n-     'Fire',\n-     'Ice',\n-     'Poison',\n-     'Flying',\n-     'Bug',\n-     'Rock'\n-   ],\n-   weight: '5.4 kg'\n- }\n    at Context.<anonymous> (logic/find-by/id/spec.js:91:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "439b1fa2-4258-4981-af1f-dda9021275b6",
              "parentUUID": "d79da3a0-8ca9-42f6-83f0-f033e3d19e43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, 42",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 2, 42",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample2, 42);\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/id/spec.js:97:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "2fdc8597-85d6-4344-8fa2-b852761e301a",
              "parentUUID": "d79da3a0-8ca9-42f6-83f0-f033e3d19e43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, 84",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 3, 84",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample3, 84);\nconst expected = {\n  \"id\": 84,\n  \"num\": \"084\",\n  \"name\": \"Doduo\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/084.png\",\n  \"type\": [\n    \"Normal\",\n    \"Flying\"\n  ],\n  \"height\": \"1.40 m\",\n  \"weight\": \"39.2 kg\",\n  \"candy\": \"Doduo Candy\",\n  \"candy_count\": 50,\n  \"egg\": \"5 km\",\n  \"spawn_chance\": 0.52,\n  \"avg_spawns\": 52,\n  \"spawn_time\": \"05:10\",\n  \"multipliers\": [\n    2.19,\n    2.24\n  ],\n  \"weaknesses\": [\n    \"Electric\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    {\n      \"num\": \"085\",\n      \"name\": \"Dodrio\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 52,\n-   candy: 'Doduo Candy',\n-   candy_count: 50,\n-   egg: '5 km',\n-   height: '1.40 m',\n-   id: 84,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/084.png',\n-   multipliers: [\n-     2.19,\n-     2.24\n-   ],\n-   name: 'Doduo',\n-   next_evolution: [\n-     {\n-       name: 'Dodrio',\n-       num: '085'\n-     }\n-   ],\n-   num: '084',\n-   spawn_chance: 0.52,\n-   spawn_time: '05:10',\n-   type: [\n-     'Normal',\n-     'Flying'\n-   ],\n-   weaknesses: [\n-     'Electric',\n-     'Rock'\n-   ],\n-   weight: '39.2 kg'\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 52,\n-   candy: 'Doduo Candy',\n-   candy_count: 50,\n-   egg: '5 km',\n-   height: '1.40 m',\n-   id: 84,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/084.png',\n-   multipliers: [\n-     2.19,\n-     2.24\n-   ],\n-   name: 'Doduo',\n-   next_evolution: [\n-     {\n-       name: 'Dodrio',\n-       num: '085'\n-     }\n-   ],\n-   num: '084',\n-   spawn_chance: 0.52,\n-   spawn_time: '05:10',\n-   type: [\n-     'Normal',\n-     'Flying'\n-   ],\n-   weaknesses: [\n-     'Electric',\n-     'Rock'\n-   ],\n-   weight: '39.2 kg'\n- }\n    at Context.<anonymous> (logic/find-by/id/spec.js:134:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "fe4ff2f5-b6a2-42a2-89e7-1cd4175fc3bc",
              "parentUUID": "d79da3a0-8ca9-42f6-83f0-f033e3d19e43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, 85",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 3, 85",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample3, 85);\nconst expected = {\n  \"id\": 85,\n  \"num\": \"085\",\n  \"name\": \"Dodrio\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/085.png\",\n  \"type\": [\n    \"Normal\",\n    \"Flying\"\n  ],\n  \"height\": \"1.80 m\",\n  \"weight\": \"85.2 kg\",\n  \"candy\": \"Doduo Candy\",\n  \"egg\": \"Not in Eggs\",\n  \"spawn_chance\": 0.22,\n  \"avg_spawns\": 22,\n  \"spawn_time\": \"02:12\",\n  \"multipliers\": null,\n  \"weaknesses\": [\n    \"Electric\",\n    \"Rock\"\n  ],\n  \"prev_evolution\": [\n    {\n      \"num\": \"084\",\n      \"name\": \"Doduo\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 22,\n-   candy: 'Doduo Candy',\n-   egg: 'Not in Eggs',\n-   height: '1.80 m',\n-   id: 85,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/085.png',\n-   multipliers: null,\n-   name: 'Dodrio',\n-   num: '085',\n-   prev_evolution: [\n-     {\n-       name: 'Doduo',\n-       num: '084'\n-     }\n-   ],\n-   spawn_chance: 0.22,\n-   spawn_time: '02:12',\n-   type: [\n-     'Normal',\n-     'Flying'\n-   ],\n-   weaknesses: [\n-     'Electric',\n-     'Rock'\n-   ],\n-   weight: '85.2 kg'\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   avg_spawns: 22,\n-   candy: 'Doduo Candy',\n-   egg: 'Not in Eggs',\n-   height: '1.80 m',\n-   id: 85,\n-   img: 'http://www.serebii.net/pokemongo/pokemon/085.png',\n-   multipliers: null,\n-   name: 'Dodrio',\n-   num: '085',\n-   prev_evolution: [\n-     {\n-       name: 'Doduo',\n-       num: '084'\n-     }\n-   ],\n-   spawn_chance: 0.22,\n-   spawn_time: '02:12',\n-   type: [\n-     'Normal',\n-     'Flying'\n-   ],\n-   weaknesses: [\n-     'Electric',\n-     'Rock'\n-   ],\n-   weight: '85.2 kg'\n- }\n    at Context.<anonymous> (logic/find-by/id/spec.js:167:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "741ca2e0-8a4a-4361-b8eb-09bf405ff836",
              "parentUUID": "d79da3a0-8ca9-42f6-83f0-f033e3d19e43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "763e7c60-eacf-4bac-af35-9472e7b68868",
            "a98c75f5-2101-48e2-8c02-66bd5d4da7e4",
            "439b1fa2-4258-4981-af1f-dda9021275b6",
            "2fdc8597-85d6-4344-8fa2-b852761e301a",
            "fe4ff2f5-b6a2-42a2-89e7-1cd4175fc3bc",
            "741ca2e0-8a4a-4361-b8eb-09bf405ff836"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9a88a1fd-6c73-4a9b-a052-f20c6647c743",
          "title": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair",
          "fullFile": "/Users/master/evan-drive/0-teach-code/h-h-y-f/0--class-7-8/06-web-apps/01-exercises/wk-4-poke/pokedex-api-update/logic/find-by/key-value/spec.js",
          "file": "/logic/find-by/key-value/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, name, Weedle",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 1, name, Weedle",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample1, 'name', 'Weedle');\nconst expected = [\n  { \"num\": \"013\", \"name\": \"Weedle\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:18:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "2e31d4a4-d1b3-4520-aeaa-5d7ded218d9e",
              "parentUUID": "9a88a1fd-6c73-4a9b-a052-f20c6647c743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, id, 12",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 1, id, 12",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample1, 'id', \"12\");\nconst expected = [\n  { \"num\": \"012\", \"name\": \"Butterfree\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:26:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "29fb812b-fe86-4d2c-9c5f-3d4fa20dd47d",
              "parentUUID": "9a88a1fd-6c73-4a9b-a052-f20c6647c743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, doesNotExist, hi!",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 2, doesNotExist, hi!",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample2, 'doesNotExist', 'hi!');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:32:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "e06b8aa7-6285-47f6-a746-09b34dfe590f",
              "parentUUID": "9a88a1fd-6c73-4a9b-a052-f20c6647c743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, name, Mew",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 2, name, Mew",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample2, 'name', 'Mew');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:38:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "12691006-a943-4d34-8eca-fb4b17060946",
              "parentUUID": "9a88a1fd-6c73-4a9b-a052-f20c6647c743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, egg, Not in Eggs",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 3, egg, Not in Eggs",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample3, 'egg', 'Not in Eggs');\nconst expected = [\n  { \"num\": \"085\", \"name\": \"Dodrio\" },\n  { \"num\": \"087\", \"name\": \"Dewgong\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dodrio',\n-     num: '085'\n-   },\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dodrio',\n-     num: '085'\n-   },\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:47:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "a85f715c-71e4-4873-89cf-cfbf84b09445",
              "parentUUID": "9a88a1fd-6c73-4a9b-a052-f20c6647c743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, egg, 5 km",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 3, egg, 5 km",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample3, 'egg', '5 km');\nconst expected = [\n  { \"num\": \"083\", \"name\": \"Farfetch'd\" },\n  { \"num\": \"084\", \"name\": \"Doduo\" },\n  { \"num\": \"086\", \"name\": \"Seel\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: \"Farfetch'd\",\n-     num: '083'\n-   },\n-   {\n-     name: 'Doduo',\n-     num: '084'\n-   },\n-   {\n-     name: 'Seel',\n-     num: '086'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: \"Farfetch'd\",\n-     num: '083'\n-   },\n-   {\n-     name: 'Doduo',\n-     num: '084'\n-   },\n-   {\n-     name: 'Seel',\n-     num: '086'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:57:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "d891c824-4b96-4a76-b389-7a94390c6c61",
              "parentUUID": "9a88a1fd-6c73-4a9b-a052-f20c6647c743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, spawn_time, N/A",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 4, spawn_time, N/A",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample4, 'spawn_time', 'N/A');\nconst expected = [\n  { \"num\": \"132\", \"name\": \"Ditto\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/key-value/spec.js:65:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "2b8b528f-9d93-41ba-8c0f-e7cdda468081",
              "parentUUID": "9a88a1fd-6c73-4a9b-a052-f20c6647c743",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2e31d4a4-d1b3-4520-aeaa-5d7ded218d9e",
            "29fb812b-fe86-4d2c-9c5f-3d4fa20dd47d",
            "e06b8aa7-6285-47f6-a746-09b34dfe590f",
            "12691006-a943-4d34-8eca-fb4b17060946",
            "a85f715c-71e4-4873-89cf-cfbf84b09445",
            "d891c824-4b96-4a76-b389-7a94390c6c61",
            "2b8b528f-9d93-41ba-8c0f-e7cdda468081"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ddad5f92-0754-4f65-a856-49c0e95059ab",
          "title": "findByType(pokeData, type) : returns the name and number of all pokemon with this type",
          "fullFile": "/Users/master/evan-drive/0-teach-code/h-h-y-f/0--class-7-8/06-web-apps/01-exercises/wk-4-poke/pokedex-api-update/logic/find-by/type/spec.js",
          "file": "/logic/find-by/type/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Bug",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 1, Bug",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample1, 'Bug');\nconst expected = [\n  { name: 'Caterpie', num: '010' },\n  { name: 'Metapod', num: '011' },\n  { name: 'Butterfree', num: '012' },\n  { name: 'Weedle', num: '013' },\n  { name: 'Kakuna', num: '014' },\n  { name: 'Beedrill', num: '015' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Caterpie',\n-     num: '010'\n-   },\n-   {\n-     name: 'Metapod',\n-     num: '011'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   },\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   },\n-   {\n-     name: 'Kakuna',\n-     num: '014'\n-   },\n-   {\n-     name: 'Beedrill',\n-     num: '015'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Caterpie',\n-     num: '010'\n-   },\n-   {\n-     name: 'Metapod',\n-     num: '011'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   },\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   },\n-   {\n-     name: 'Kakuna',\n-     num: '014'\n-   },\n-   {\n-     name: 'Beedrill',\n-     num: '015'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:24:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "6b4bce04-2e93-45c0-819e-c875cadfb7fd",
              "parentUUID": "ddad5f92-0754-4f65-a856-49c0e95059ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample2, 'Bug');\nconst expected = [\n  { name: 'Paras', num: '046' },\n  { name: 'Parasect', num: '047' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Paras',\n-     num: '046'\n-   },\n-   {\n-     name: 'Parasect',\n-     num: '047'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Paras',\n-     num: '046'\n-   },\n-   {\n-     name: 'Parasect',\n-     num: '047'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:33:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "1ffc0972-d125-49ae-b3a1-5f27f3a0266e",
              "parentUUID": "ddad5f92-0754-4f65-a856-49c0e95059ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, Water",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 3, Water",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample3, 'Water');\nconst expected = [\n  { name: 'Seel', num: '086' },\n  { name: 'Dewgong', num: '087' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Seel',\n-     num: '086'\n-   },\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Seel',\n-     num: '086'\n-   },\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:42:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "22d5407c-d93b-4c44-9494-d2d5e29fb90c",
              "parentUUID": "ddad5f92-0754-4f65-a856-49c0e95059ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample4, 'Normal');\nconst expected = [\n  { name: 'Tauros', num: '128' },\n  { name: 'Ditto', num: '132' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Tauros',\n-     num: '128'\n-   },\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Tauros',\n-     num: '128'\n-   },\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:51:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "26b42113-554c-4a2a-96ff-eb518cf9c665",
              "parentUUID": "ddad5f92-0754-4f65-a856-49c0e95059ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 5, Dragon",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample5, 'Dragon');\nconst expected = [\n  { name: 'Dratini', num: '147' },\n  { name: 'Dragonair', num: '148' },\n  { name: 'Dragonite', num: '149' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dratini',\n-     num: '147'\n-   },\n-   {\n-     name: 'Dragonair',\n-     num: '148'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dratini',\n-     num: '147'\n-   },\n-   {\n-     name: 'Dragonair',\n-     num: '148'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/type/spec.js:61:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "ac75af81-a675-4286-b24a-56d2f151e178",
              "parentUUID": "ddad5f92-0754-4f65-a856-49c0e95059ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6b4bce04-2e93-45c0-819e-c875cadfb7fd",
            "1ffc0972-d125-49ae-b3a1-5f27f3a0266e",
            "22d5407c-d93b-4c44-9494-d2d5e29fb90c",
            "26b42113-554c-4a2a-96ff-eb518cf9c665",
            "ac75af81-a675-4286-b24a-56d2f151e178"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4b9b19da-1510-4b9b-adf9-d11f0cfad07a",
          "title": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key",
          "fullFile": "/Users/master/evan-drive/0-teach-code/h-h-y-f/0--class-7-8/06-web-apps/01-exercises/wk-4-poke/pokedex-api-update/logic/find-by/value/spec.js",
          "file": "/logic/find-by/value/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, 12",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 1, 12",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample1, '12');\nconst expected = [\n  { name: 'Caterpie', num: '010' },\n  { name: 'Butterfree', num: '012' },\n  { name: 'Weedle', num: '013' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Caterpie',\n-     num: '010'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   },\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Caterpie',\n-     num: '010'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   },\n-   {\n-     name: 'Weedle',\n-     num: '013'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/value/spec.js:20:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "241f30ae-0113-4e39-b1a8-b0b5d134414b",
              "parentUUID": "4b9b19da-1510-4b9b-adf9-d11f0cfad07a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample2, 'Bug');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/value/spec.js:26:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "2790ca40-eca4-42e9-ae42-053a566811ea",
              "parentUUID": "4b9b19da-1510-4b9b-adf9-d11f0cfad07a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, None",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 4, None",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample4, 'None');\nconst expected = [\n  { name: 'Mr. Mime', num: '122' },\n  { name: 'Scyther', num: '123' },\n  { name: 'Jynx', num: '124' },\n  { name: 'Electabuzz', num: '125' },\n  { name: 'Magmar', num: '126' },\n  { name: 'Pinsir', num: '127' },\n  { name: 'Tauros', num: '128' },\n  { name: 'Lapras', num: '131' },\n  { name: 'Ditto', num: '132' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Mr. Mime',\n-     num: '122'\n-   },\n-   {\n-     name: 'Scyther',\n-     num: '123'\n-   },\n-   {\n-     name: 'Jynx',\n-     num: '124'\n-   },\n-   {\n-     name: 'Electabuzz',\n-     num: '125'\n-   },\n-   {\n-     name: 'Magmar',\n-     num: '126'\n-   },\n-   {\n-     name: 'Pinsir',\n-     num: '127'\n-   },\n-   {\n-     name: 'Tauros',\n-     num: '128'\n-   },\n-   {\n-     name: 'Lapras',\n-     num: '131'\n-   },\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Mr. Mime',\n-     num: '122'\n-   },\n-   {\n-     name: 'Scyther',\n-     num: '123'\n-   },\n-   {\n-     name: 'Jynx',\n-     num: '124'\n-   },\n-   {\n-     name: 'Electabuzz',\n-     num: '125'\n-   },\n-   {\n-     name: 'Magmar',\n-     num: '126'\n-   },\n-   {\n-     name: 'Pinsir',\n-     num: '127'\n-   },\n-   {\n-     name: 'Tauros',\n-     num: '128'\n-   },\n-   {\n-     name: 'Lapras',\n-     num: '131'\n-   },\n-   {\n-     name: 'Ditto',\n-     num: '132'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/value/spec.js:42:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "6284c2f2-cbc2-4edf-97d9-0b7618f8a993",
              "parentUUID": "4b9b19da-1510-4b9b-adf9-d11f0cfad07a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, null",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 5, null",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample5, \"null\");\nconst expected = [\n  { name: 'Moltres', num: '146' },\n  { name: 'Dragonite', num: '149' },\n  { name: 'Mewtwo', num: '150' },\n  { name: 'Mew', num: '151' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Moltres',\n-     num: '146'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   },\n-   {\n-     name: 'Mewtwo',\n-     num: '150'\n-   },\n-   {\n-     name: 'Mew',\n-     num: '151'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Moltres',\n-     num: '146'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   },\n-   {\n-     name: 'Mewtwo',\n-     num: '150'\n-   },\n-   {\n-     name: 'Mew',\n-     num: '151'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/value/spec.js:53:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "93b177f7-ec65-4463-b4fc-46c44bb317f1",
              "parentUUID": "4b9b19da-1510-4b9b-adf9-d11f0cfad07a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "241f30ae-0113-4e39-b1a8-b0b5d134414b",
            "2790ca40-eca4-42e9-ae42-053a566811ea",
            "6284c2f2-cbc2-4edf-97d9-0b7618f8a993",
            "93b177f7-ec65-4463-b4fc-46c44bb317f1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1dace053-9982-4682-bc80-9f68d8d829b5",
          "title": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness",
          "fullFile": "/Users/master/evan-drive/0-teach-code/h-h-y-f/0--class-7-8/06-web-apps/01-exercises/wk-4-poke/pokedex-api-update/logic/find-by/weakness/spec.js",
          "file": "/logic/find-by/weakness/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Electric",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 1, Electric",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample1, 'Electric');\nconst expected = [\n  {\n    name: 'Squirtle',\n    num: '007'\n  },\n  {\n    name: 'Wartortle',\n    num: '008'\n  },\n  {\n    name: 'Blastoise',\n    num: '009'\n  },\n  {\n    name: 'Butterfree',\n    num: '012'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Squirtle',\n-     num: '007'\n-   },\n-   {\n-     name: 'Wartortle',\n-     num: '008'\n-   },\n-   {\n-     name: 'Blastoise',\n-     num: '009'\n-   },\n-   {\n-     name: 'Butterfree',\n-     num: '012'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:34:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "9aa1b2c9-c84b-4f8a-b4bf-fa85555e5e7d",
              "parentUUID": "1dace053-9982-4682-bc80-9f68d8d829b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample2, 'Bug');\nconst expected = [\n  {\n    name: 'Paras',\n    num: '046'\n  },\n  {\n    name: 'Parasect',\n    num: '047'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Paras',\n-     num: '046'\n-   },\n-   {\n-     name: 'Parasect',\n-     num: '047'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Paras',\n-     num: '046'\n-   },\n-   {\n-     name: 'Parasect',\n-     num: '047'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:49:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "869a8029-0954-409c-9d22-935c0157d8cd",
              "parentUUID": "1dace053-9982-4682-bc80-9f68d8d829b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, Fighting",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 3, Fighting",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample3, 'Fighting');\nconst expected = [\n  {\n    name: 'Dewgong',\n    num: '087'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dewgong',\n-     num: '087'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:60:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "b81bd1e6-f024-4638-9e91-5ec50f7d6b0b",
              "parentUUID": "1dace053-9982-4682-bc80-9f68d8d829b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample4, 'Normal');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- null\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:66:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "a8cc8e30-aaf7-4eb1-a860-bd6cadcaa428",
              "parentUUID": "1dace053-9982-4682-bc80-9f68d8d829b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 5, Dragon",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample5, 'Dragon');\nconst expected = [\n  {\n    name: 'Dratini',\n    num: '147'\n  },\n  {\n    name: 'Dragonair',\n    num: '148'\n  },\n  {\n    name: 'Dragonite',\n    num: '149'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dratini',\n-     num: '147'\n-   },\n-   {\n-     name: 'Dragonair',\n-     num: '148'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   }\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   {\n-     name: 'Dratini',\n-     num: '147'\n-   },\n-   {\n-     name: 'Dragonair',\n-     num: '148'\n-   },\n-   {\n-     name: 'Dragonite',\n-     num: '149'\n-   }\n- ]\n    at Context.<anonymous> (logic/find-by/weakness/spec.js:85:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "7690d7a1-ff74-4fe9-b427-5e4a5f271e8b",
              "parentUUID": "1dace053-9982-4682-bc80-9f68d8d829b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9aa1b2c9-c84b-4f8a-b4bf-fa85555e5e7d",
            "869a8029-0954-409c-9d22-935c0157d8cd",
            "b81bd1e6-f024-4638-9e91-5ec50f7d6b0b",
            "a8cc8e30-aaf7-4eb1-a860-bd6cadcaa428",
            "7690d7a1-ff74-4fe9-b427-5e4a5f271e8b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0c9fdd7e-534a-4f55-975e-74ebe1117d4d",
          "title": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData",
          "fullFile": "/Users/master/evan-drive/0-teach-code/h-h-y-f/0--class-7-8/06-web-apps/01-exercises/wk-4-poke/pokedex-api-update/logic/type-stats/spec.js",
          "file": "/logic/type-stats/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 2, Grass",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 2, Grass",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample2, 'Grass');\nconst expected = {\n  typeCount: 5,\n  typeName: 'Grass',\n  weaknessCount: 0\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 5,\n-   typeName: 'Grass',\n-   weaknessCount: 0\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 5,\n-   typeName: 'Grass',\n-   weaknessCount: 0\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:19:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "fd320e28-8f98-4645-b5ee-1cd0066725b8",
              "parentUUID": "0c9fdd7e-534a-4f55-975e-74ebe1117d4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Fire",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 2, Fire",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample2, 'Fire');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fire',\n  weaknessCount: 5\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fire',\n-   weaknessCount: 5\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fire',\n-   weaknessCount: 5\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:29:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "b61ac324-c7d4-4e6d-acbb-afd6b6e09d40",
              "parentUUID": "0c9fdd7e-534a-4f55-975e-74ebe1117d4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample4, 'Normal');\nconst expected = {\n  typeCount: 2,\n  typeName: 'Normal',\n  weaknessCount: 0\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 2,\n-   typeName: 'Normal',\n-   weaknessCount: 0\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 2,\n-   typeName: 'Normal',\n-   weaknessCount: 0\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:39:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "a5ff2337-74b6-4c9e-bf84-fe6e3103e582",
              "parentUUID": "0c9fdd7e-534a-4f55-975e-74ebe1117d4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Fighting",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 4, Fighting",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample4, 'Fighting');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fighting',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fighting',\n-   weaknessCount: 3\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fighting',\n-   weaknessCount: 3\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:49:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "7a457af5-c73d-4c55-acea-89f7c21d7661",
              "parentUUID": "0c9fdd7e-534a-4f55-975e-74ebe1117d4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 5, Dragon",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample5, 'Dragon');\nconst expected = {\n  typeCount: 3,\n  typeName: 'Dragon',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 3,\n-   typeName: 'Dragon',\n-   weaknessCount: 3\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 3,\n-   typeName: 'Dragon',\n-   weaknessCount: 3\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:59:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "3f9d934a-1074-4cf7-8303-cd220fa969f1",
              "parentUUID": "0c9fdd7e-534a-4f55-975e-74ebe1117d4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Fairy",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 5, Fairy",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample5, 'Fairy');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fairy',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fairy',\n-   weaknessCount: 3\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- {\n-   typeCount: 0,\n-   typeName: 'Fairy',\n-   weaknessCount: 3\n- }\n    at Context.<anonymous> (logic/type-stats/spec.js:69:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "82c86435-2342-4924-9e60-051ef7aa7e98",
              "parentUUID": "0c9fdd7e-534a-4f55-975e-74ebe1117d4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fd320e28-8f98-4645-b5ee-1cd0066725b8",
            "b61ac324-c7d4-4e6d-acbb-afd6b6e09d40",
            "a5ff2337-74b6-4c9e-bf84-fe6e3103e582",
            "7a457af5-c73d-4c55-acea-89f7c21d7661",
            "3f9d934a-1074-4cf7-8303-cd220fa969f1",
            "82c86435-2342-4924-9e60-051ef7aa7e98"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2bd68602-9e8e-4c39-992e-5a10253f6b42",
          "title": "valuesForKey(pokeData, key) : returns all unique values stored in that key",
          "fullFile": "/Users/master/evan-drive/0-teach-code/h-h-y-f/0--class-7-8/06-web-apps/01-exercises/wk-4-poke/pokedex-api-update/logic/values-for-key/spec.js",
          "file": "/logic/values-for-key/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 2, id",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 2, id",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample2, 'id');\nconst expected = [43, 44, 45, 46, 47];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   43,\n-   44,\n-   45,\n-   46,\n-   47\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   43,\n-   44,\n-   45,\n-   46,\n-   47\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:15:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "8df040c3-1392-4d2b-acee-bc88b9f304da",
              "parentUUID": "2bd68602-9e8e-4c39-992e-5a10253f6b42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, name",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 2, name",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample2, 'name');\nconst expected = [\n  'Oddish',\n  'Gloom',\n  'Vileplume',\n  'Paras',\n  'Parasect'\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   'Oddish',\n-   'Gloom',\n-   'Vileplume',\n-   'Paras',\n-   'Parasect'\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   'Oddish',\n-   'Gloom',\n-   'Vileplume',\n-   'Paras',\n-   'Parasect'\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:27:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "aae8b475-78fb-4b9b-9f14-5fefa088aa0f",
              "parentUUID": "2bd68602-9e8e-4c39-992e-5a10253f6b42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, num",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 3, num",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample3, 'num');\nconst expected = ['083', '084', '085', '086', '087'];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   '083',\n-   '084',\n-   '085',\n-   '086',\n-   '087'\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   '083',\n-   '084',\n-   '085',\n-   '086',\n-   '087'\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:33:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "8678a289-6af4-4806-8c70-98be919cd5e6",
              "parentUUID": "2bd68602-9e8e-4c39-992e-5a10253f6b42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, multipliers",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 3, multipliers",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample3, 'multipliers');\nconst expected = [\n  null,\n  [2.19, 2.24],\n  [1.04, 1.96]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   null,\n-   [\n-     2.19,\n-     2.24\n-   ],\n-   [\n-     1.04,\n-     1.96\n-   ]\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   null,\n-   [\n-     2.19,\n-     2.24\n-   ],\n-   [\n-     1.04,\n-     1.96\n-   ]\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:43:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "384acc72-d623-430c-8e79-fbf0956cb903",
              "parentUUID": "2bd68602-9e8e-4c39-992e-5a10253f6b42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, weaknesses",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 4, weaknesses",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample4, 'weaknesses');\nconst expected = [\n  ['Bug', 'Ghost', 'Dark'],\n  ['Fire', 'Electric', 'Ice', 'Flying', 'Rock'],\n  ['Fire', 'Bug', 'Rock', 'Ghost', 'Dark', 'Steel'],\n  ['Ground'],\n  ['Water', 'Ground', 'Rock'],\n  ['Fire', 'Flying', 'Rock'],\n  ['Fighting'],\n  ['Electric', 'Grass'],\n  ['Electric', 'Rock'],\n  ['Electric', 'Grass', 'Fighting', 'Rock']\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n+ undefined\n...\n- [\n-   [\n-     'Bug',\n-     'Ghost',\n-     'Dark'\n-   ],\n-   [\n-     'Fire',\n-     'Electric',\n-     'Ice',\n-     'Flying',\n-     'Rock'\n-   ],\n-   [\n-     'Fire',\n-     'Bug',\n-     'Rock',\n-     'Ghost',\n-     'Dark',\n-     'Steel'\n-   ],\n-   [\n-     'Ground'\n-   ],\n-   [\n-     'Water',\n-     'Ground',\n-     'Rock'\n-   ],\n-   [\n-     'Fire',\n-     'Flying',\n-     'Rock'\n-   ],\n-   [\n-     'Fighting'\n-   ],\n-   [\n-     'Electric',\n-     'Grass'\n-   ],\n-   [\n-     'Electric',\n-     'Rock'\n-   ],\n-   [\n-     'Electric',\n-     'Grass',\n-     'Fighting',\n-     'Rock'\n...",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n+ undefined\n...\n- [\n-   [\n-     'Bug',\n-     'Ghost',\n-     'Dark'\n-   ],\n-   [\n-     'Fire',\n-     'Electric',\n-     'Ice',\n-     'Flying',\n-     'Rock'\n-   ],\n-   [\n-     'Fire',\n-     'Bug',\n-     'Rock',\n-     'Ghost',\n-     'Dark',\n-     'Steel'\n-   ],\n-   [\n-     'Ground'\n-   ],\n-   [\n-     'Water',\n-     'Ground',\n-     'Rock'\n-   ],\n-   [\n-     'Fire',\n-     'Flying',\n-     'Rock'\n-   ],\n-   [\n-     'Fighting'\n-   ],\n-   [\n-     'Electric',\n-     'Grass'\n-   ],\n-   [\n-     'Electric',\n-     'Rock'\n-   ],\n-   [\n-     'Electric',\n-     'Grass',\n-     'Fighting',\n-     'Rock'\n...\n    at Context.<anonymous> (logic/values-for-key/spec.js:60:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "d0f3fc43-2267-493b-8271-a9b2664db108",
              "parentUUID": "2bd68602-9e8e-4c39-992e-5a10253f6b42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, prev_evolution",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 4, prev_evolution",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample4, 'prev_evolution');\nconst expected = [\n  [\n    { num: '129', name: 'Magikarp' }\n  ]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   [\n-     {\n-       name: 'Magikarp',\n-       num: '129'\n-     }\n-   ]\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   [\n-     {\n-       name: 'Magikarp',\n-       num: '129'\n-     }\n-   ]\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:70:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "bd70fe96-0197-4c40-8c5e-a7f12254c98c",
              "parentUUID": "2bd68602-9e8e-4c39-992e-5a10253f6b42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, next_evolution",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 5, next_evolution",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample5, 'next_evolution');\nconst expected = [\n  [\n    { num: '148', name: 'Dragonair' },\n    { num: '149', name: 'Dragonite' }\n  ],\n  [\n    { num: '149', name: 'Dragonite' }\n  ]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   [\n-     {\n-       name: 'Dragonair',\n-       num: '148'\n-     },\n-     {\n-       name: 'Dragonite',\n-       num: '149'\n-     }\n-   ],\n-   [\n-     {\n-       name: 'Dragonite',\n-       num: '149'\n-     }\n-   ]\n- ]",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ undefined\n- [\n-   [\n-     {\n-       name: 'Dragonair',\n-       num: '148'\n-     },\n-     {\n-       name: 'Dragonite',\n-       num: '149'\n-     }\n-   ],\n-   [\n-     {\n-       name: 'Dragonite',\n-       num: '149'\n-     }\n-   ]\n- ]\n    at Context.<anonymous> (logic/values-for-key/spec.js:84:12)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "d1d1bc79-ec3e-450a-b7d0-66903096deed",
              "parentUUID": "2bd68602-9e8e-4c39-992e-5a10253f6b42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8df040c3-1392-4d2b-acee-bc88b9f304da",
            "aae8b475-78fb-4b9b-9f14-5fefa088aa0f",
            "8678a289-6af4-4806-8c70-98be919cd5e6",
            "384acc72-d623-430c-8e79-fbf0956cb903",
            "d0f3fc43-2267-493b-8271-a9b2664db108",
            "bd70fe96-0197-4c40-8c5e-a7f12254c98c",
            "d1d1bc79-ec3e-450a-b7d0-66903096deed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}